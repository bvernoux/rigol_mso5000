name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  MSO5000_SCPI_Ubuntu:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Get build timestamp
      id: id_date
      shell: bash
      run: echo "timestamp=$(date +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_OUTPUT

    - name: Get app version
      id: id_version
      shell: bash
      run: |
         cd scpi
         app_major_minor_patch=`grep -oP '(?<=VERSION \"v)[0-9.]+' MSO5000_SCPI.c`
         echo "app_version=v$app_major_minor_patch-${{steps.id_date.outputs.timestamp}}" >> $GITHUB_OUTPUT

    - name: Build app
      shell: bash
      run: |
         cd scpi
         make

    - name: Upload artifact
      env: 
        APP_VERSION: "${{steps.id_version.outputs.app_version}}"
      uses: actions/upload-artifact@v3
      with:
        name: MSO5000_SCPI-Ubuntu-${{env.APP_VERSION}}
        path: scpi

  MSO5000_SCPI_Windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v3
    - uses: msys2/setup-msys2@v2
      with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-make mingw-w64-x86_64-gcc mingw-w64-x86_64-libusb

    - name: Get build timestamp
      id: id_date
      run: echo "timestamp=$(date +%Y-%m-%d-%H-%M-%S)" >> $GITHUB_OUTPUT

    - name: Get app version
      id: id_version     
      run: |
         cd scpi
         app_major_minor_patch=`grep -oP '(?<=VERSION \"v)[0-9.]+' MSO5000_SCPI.c`
         echo "app_version=v$app_major_minor_patch-${{steps.id_date.outputs.timestamp}}" >> $GITHUB_OUTPUT

    - name: Build app
      run: |
         cd scpi
         mingw32-make

    - name: Upload artifact
      env: 
        APP_VERSION: "${{steps.id_version.outputs.app_version}}"
      uses: actions/upload-artifact@v3
      with:
        name: MSO5000_SCPI-Windows-${{env.APP_VERSION}}
        path: scpi
